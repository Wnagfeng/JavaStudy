package org.example;

public class Main {
    public static void main(String[] args) {
        /*
        * 为什么要学习事务事务和Aop的区别是啥？来看一个生活中的小例子：
        * 生活中的例子：
            假设你在一家餐厅工作，负责为顾客准备一份复杂的套餐，这个套餐由多个菜品组成，比如前菜、主菜和甜点。为了确保顾客享受到完整的套餐，你制定了一些规则。

            AOP的比喻：横切关注点的分离
            在为顾客准备套餐时，有一些事情是必须做的，但与料理本身无关，比如检查食材的新鲜度、核对顾客的订单、最后的清洁和服务质量。这些都是“横切关注点”，它们可以看作是AOP中的切面。

            检查食材的新鲜度：确保使用的新鲜食材。
            核对顾客的订单：确保每个顾客得到他们点的菜。
            最后的清洁和服务：提供良好的用餐体验。
            通过将这些事项分开处理（例如，有专人负责检查食材和服务），你的工作变得更加高效和清晰，这就是AOP的好处。

            事务管理的比喻：确保完整性
            现在，想象一下，如果在准备套餐的过程中，主菜的食材突然短缺，那么你就无法完成整个套餐。如果已经给顾客上了前菜，但主菜没法提供，那样顾客就会不满意。这时候，你需要一种机制来确保套餐的完整性。

            事务的比喻：假设你的餐厅有一个规则，只有在所有菜品都准备好后才可以上菜。如果前菜准备好了，但主菜或甜点没有，整个套餐就不可以上桌，此时你可以选择“回退”（取消前菜），以确保顾客得到完整的用餐体验。
            通过事务管理，你确保了所有的菜品要么都准备好并且上桌，要么什么都不提供，这样就不会出现顾客期待的东西没有提供的情况。

            总结：
            AOP就像是将各种服务（检查、核对、清洁）分开处理，让整体工作流更加清晰和高效。
            事务管理确保整个过程中顾客能得到一份完整的套餐，要么全给，要么全不提供，避免了不完整的用餐体验。
        *
        * */
        System.out.println("Hello world!");
    }
}